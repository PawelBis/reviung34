/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hr_lmod: hr_lmod {
            compatible = "zmk,behavior-hold-tap";
            label = "HR_LMOD";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <25 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
            flavor = "hold-preferred";
            quick-tap-ms = <150>;
        };
        hr_rmod: hr_rmod {
            compatible = "zmk,behavior-hold-tap";
            label = "HR_RMOD";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
            flavor = "hold-preferred";
            quick-tap-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
            timeout-ms = <20>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <17 16>;
            timeout-ms = <20>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 0>;
        };

        num_layer {
            bindings = <&mo 5>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------
            // | Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // | A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // | Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //                   | LGUI | SPC | RET | ALT |

            bindings = <
          &kp Q            &kp W             &kp E              &kp R      &kp T  &kp Y                       &kp U             &kp I            &kp O                    &kp P
&hr_lmod LGUI A  &hr_lmod LALT S  &hr_lmod LCTRL D  &hr_lmod LSHIFT F      &kp G  &kp H           &hr_rmod RSHIFT J  &hr_rmod RCTRL K  &hr_rmod RALT L  &hr_rmod RGUI SEMICOLON
          &kp Z            &kp X             &kp C              &kp V      &kp B  &kp N                       &kp M         &kp COMMA          &kp DOT                 &kp FSLH
                                                                &mo 1  &kp SPACE         &kp RET                                &mo 4
            >;
        };

        Nav {
            bindings = <
   &none     &none             &none           &none  &none       &kp CARET           &kp AMPERSAND  &kp KP_MULTIPLY    &kp SQT  &kp DELETE
&kp LGUI  &kp LALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none  &kp LEFT_ARROW                &kp DOWN     &kp UP_ARROW  &kp RIGHT   &kp GRAVE
   &none     &none             &none           &none  &none        &kp HOME           &kp PAGE_DOWN      &kp PAGE_UP    &kp END  &kp INSERT
                                               &none  &mo 2                  &kp RET                           &none
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans
                        &trans  &trans          &trans          &trans
            >;
        };

        Media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans
                        &trans  &trans          &trans          &trans
            >;
        };

        Sym {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR     &kp PERCENT  &kp CARET         &kp LEFT_PARENTHESIS           &kp RPAR      &none     &kp DELETE
          &none        &none     &none       &none           &none  &kp EQUAL             &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GRAVE  &kp BACKSLASH
          &none        &none     &none       &none           &none  &kp MINUS               &kp LEFT_BRACE    &kp RIGHT_BRACE      &none       &kp PIPE
                                             &none  &kp UNDERSCORE             &mo 5                                    &none
            >;
        };

        Num {
            bindings = <
&kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &kp PLUS  &none              &none      &none     &none     &none
      &kp SLASH  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL  &none         &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI
   &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS  &none              &none      &none     &none     &none
                                                    &none      &none         &none                  &none
            >;
        };

        Fn {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN  &none           &kp K_PLAY_PAUSE         &kp K_MUTE            &none    &bt BT_CLR
&kp F11  &kp F4  &kp F5  &kp F6            &none  &none         &kp RS(K_PREVIOUS)  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp K_NEXT
&kp F10  &kp F1  &kp F2  &kp F3            &none  &none               &bt BT_SEL 0       &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3
                          &none            &none         &none                                  &none
            >;
        };
    };
};
